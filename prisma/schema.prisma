generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  phone         String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Room {
  id   Int    @id @default(autoincrement())
  category String
  ym String
  deposit Int?
  area Int
  address String
  detailAddress String
  phone String
  image String
  title String
  contents String
  updatedAt DateTime @default(now())
  userId String
}

model Community {
  id   Int    @id @default(autoincrement())
  category Int
  images String
  contents String
  updatedAt DateTime @default(now())
  commentid Int
  userId String
}

model Comment {
  id          Int      @id @default(autoincrement())
  contents    String
  updatedAt   DateTime @updatedAt
  userId      String
  communityId Int
}
